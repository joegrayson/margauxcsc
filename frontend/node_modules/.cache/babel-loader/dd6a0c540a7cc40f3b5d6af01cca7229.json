{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productsReducer, productDetailsReducer } from './reducers/productReducers';\nimport { authReducer, userReducer, forgotPasswordReducer } from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { newOrderReducer } from './reducers/orderReducers';\nimport thunk from 'redux-thunk';\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  auth: authReducer,\n  user: userReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingInfo: localStorage.getItem('shippingInfo') ? JSON.parse(localStorage.getItem('shippingInfo')) : {}\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","composeWithDevTools","productsReducer","productDetailsReducer","authReducer","userReducer","forgotPasswordReducer","cartReducer","newOrderReducer","thunk","reducer","products","productDetails","auth","user","forgotPassword","cart","newOrder","initialState","cartItems","localStorage","getItem","JSON","parse","shippingInfo","middleware","store"],"sources":["C:/Users/kingj/Desktop/margauxcsc/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productsReducer, productDetailsReducer } from './reducers/productReducers';\r\nimport { authReducer, userReducer, forgotPasswordReducer } from './reducers/userReducers'\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { newOrderReducer } from './reducers/orderReducers';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst reducer = combineReducers({\r\n    products: productsReducer,\r\n    productDetails: productDetailsReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer\r\n})\r\n\r\nlet initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n        shippingInfo: localStorage.getItem('shippingInfo')\r\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n            : {}\r\n    }\r\n}\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,eAAT,EAA0BC,qBAA1B,QAAuD,4BAAvD;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,qBAAnC,QAAgE,yBAAhE;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,OAAO,GAAGX,eAAe,CAAC;EAC5BY,QAAQ,EAAET,eADkB;EAE5BU,cAAc,EAAET,qBAFY;EAG5BU,IAAI,EAAET,WAHsB;EAI5BU,IAAI,EAAET,WAJsB;EAK5BU,cAAc,EAAET,qBALY;EAM5BU,IAAI,EAAET,WANsB;EAO5BU,QAAQ,EAAET;AAPkB,CAAD,CAA/B;AAUA,IAAIU,YAAY,GAAG;EACfF,IAAI,EAAE;IACFG,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACLC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADK,GAEL,EAHJ;IAIFG,YAAY,EAAEJ,YAAY,CAACC,OAAb,CAAqB,cAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADQ,GAER;EANJ;AADS,CAAnB;AAWA,MAAMI,UAAU,GAAG,CAAChB,KAAD,CAAnB;AACA,MAAMiB,KAAK,GAAG5B,WAAW,CAACY,OAAD,EAAUQ,YAAV,EACrBjB,mBAAmB,CAACD,eAAe,CAAC,GAAGyB,UAAJ,CAAhB,CADE,CAAzB;AAIA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}